Demos
-----

Here demos list of `Telegram-Bot-Discussion` framework usage (ordered by complexity) and online-demos for some one (which frontend part can be demonstrate effectively):

* `"Hello World Bot"` - say "Hello World" for any entered `Telegram-user` replica (try this by bot demo  `@tbd_hello_world_bot <https://t.me/tbd_hello_world_bot>`_).

* `"Echo Bot"` - get back any entered data to `Telegram-user` (try this by bot demo `@tbd_echo_bot <https://t.me/tbd_echo_bot>`_).

* `"Raw Present Bot"` - show raw data of `Telegram-message` (try this by bot demo `@tbd_raw_present_bot <https://t.me/tbd_raw_present_bot>`_).

* `"Calc Bot"` - show simple `Dialogue`-function for step-by-step values getting from `Telegram-user` and calc result at the end (try this by bot demo `@tbd_calc_bot <https://t.me/tbd_calc_bot>`_). It demonstrate fix typing for potential calc operations.

* `"Simple Dialogue Bot"` - show `Dialogue`-function for make `Telegram-user` survey and show it result(try this by bot demo `@tbd_simple_dialogue_bot <https://t.me/tbd_simple_dialogue_bot>`_). 

* `"Survey Bot"` - show `Dialogue`-function for make `Telegram-user` survey with fixed answers variants and stored results (try this by bot demo `@tbd_survey_bot <https://t.me/tbd_survey_bot>`_). It demonstrate the ability to create `Telegram-bots` for arbitrary questionnaires.

* `"Quiz Bot"` - show looper `Dialogue`-function with random quiz (native `Telegram-quiz`) questions and user answer statistics (try this by bot demo `@tbd_quiz_bot <https://t.me/tbd_quiz_bot>`_). 

* `"Button Bot"` - show properly work of `Buttons` life-time (try this by bot demo `@tbd_button_bot <https://t.me/tbd_button_bot>`_). 

* `"Change Button Bot"` - show properly work of `Button`-object on-click action and change state On/Off in it keyboard with (try this by bot demo `@tbd_change_button_bot <https://t.me/tbd_change_button_bot>`_).

* `“Confirm Bot”` and `"Confirm Inline Bot"` - show properly work of making confirm dialog before run some operation`Button`-object on-click action and change state On/Off in it keyboard with (try this by bots demos `@tbd_confirm_bot <https://t.me/tbd_confirm_bot>`_ and `@tbd_confirm_inline_bot <https://t.me/tbd_confirm_inline_bot>`_).

* `"Pagination Bot"` - show custom implementation of `Telegram-Bot-Discussion` data pagination interface (try this by bot demo `@tbd_pagination_bot <https://t.me/tbd_pagination_bot>`_).

* `"Store Button Bot"` - show implementation of `Coder Interface` for Telegram data callback query, which used when user click `Button` (try this by bot demo `@tbd_store_button_bot <https://t.me/tbd_store_button_bot>`_). In the box `Telegram-Bot-Discussion` contains two realizations of `Coder Interface`: 

    * store callback query data within `Button` as callback action `Params` (with limited by native `Telegram` protocol data length (64 bytes) and variables types - `int`, `string`).
    * store unique identity of callback action `Params`, which are loaded when user click `Button` (no any limits of callback data length and variables types).


And here other examples, which focus at backend and can't be demonstrate:

* `"Mono User Bot"` - show `Middleware` proposes like logging all requests to `Telegram-bot`, check access control of user for response to them results of bot operations.

* `"Json Logger Bot"` - show custom implementation of `Telegram-Bot-Discussion` logger interface.

* `"Chat Monitoring Bot"` - show case when message `chat_id` and `recipient_id` are differ. Add bot to your group or chat as admin and type any statement with substring `"password"`. Bot send personal button to you in chat. Other user can not get reaction from this button.

These demos code is start hosted in `GitVerse Repository <https://gitverse.ru/BorisPlus/Telegram-Bot-Discussion-Examples>`_.
